package com.neuedu.dao;

import com.neuedu.pojo.Cart;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

@Mapper
public interface CartMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbggenerated
     */
    int insert(Cart record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbggenerated
     */
    Cart selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbggenerated
     */
    List<Cart> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(Cart record);

    Cart selectCartByUserIdAndProductId(@Param("userId")Integer userId,
                                    @Param("productId") Integer productId);

    /**
     * 查询用户的的购物车信息
     * @param userId
     * @return
     */
    List<Cart> selectByUserId(Integer userId);

    /**
     * 统计用户购物信息是否全选
     * @Return > 0说明未全选
     * (返回值<0说明全选)
     * @param userId
     * @return
     */
    int isCheckedAll(Integer userId);

    /**
     * 移除购物车中某些/某个商品
     * @param userId
     * @param productIdList
     * @return
     */
    int deleteByUserIdAndProductIds(
            @Param("userId") Integer userId,
            @Param("productIdList") List<Integer> productIdList);

    /**
     * 操作购物车商品是否选中
     * @param userId
     * @param productId
     * @param check  1：选中   0：未选中
     *   全选就是productId==0
     * @return
     */
    int selectOrUnselectProduct(@Param("userId") Integer userId,
                                @Param("productId")Integer productId,
                                @Param("check") Integer check);

    /**
     * 统计购物车中产品的数量
     * @param userId
     * @return
     */
    int get_cart_product_count(Integer userId);

    /**
     * 统计用户购物车中选中商品的数量
     * @param UserId
     * @return
     */
    List<Cart> findCartListByUserIdAndCheck(Integer UserId);

    /**
     * 批量删除购物车中商品
     * @param cartList
     * @return
     */
    int batchDelete(List<Cart> cartList);


}